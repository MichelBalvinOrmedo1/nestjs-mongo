# Imagen base
FROM node:22-alpine3.20 AS builder
# Configuración de BuildKit
ENV DIR=/app
WORKDIR $DIR

# Instala dumb-init (versión fija) y pnpm
RUN apk update \
 && apk add --no-cache dumb-init=1.2.5-r3 \
 && npm install -g pnpm@9.15.2

# Copia manifiestos de dependencias
COPY package.json pnpm-lock.yaml ./

# Instala exactamente lo especificado en pnpm-lock.yaml
RUN pnpm install --frozen-lockfile

# Copia configuración de TS/SWC y código fuente
COPY tsconfig*.json .swcrc nest-cli.json ./
COPY src src/

# Compila y elimina devDependencies
RUN pnpm run build \
 && pnpm prune --prod

# =========================== #
#        Producción           #
# =========================== #
FROM node:22-alpine3.20 AS production

ENV NODE_ENV=production
ENV DIR=/app
ENV USER=node
WORKDIR $DIR

# 1) dumb-init
COPY --from=builder /usr/bin/dumb-init /usr/bin/dumb-init

# 2) manifiestos y lockfile
COPY --from=builder /app/package.json /app/pnpm-lock.yaml ./

# 3) módulos de producción
COPY --from=builder /app/node_modules ./node_modules

# 4) artefactos compilados
COPY --from=builder /app/dist ./dist

USER $USER

ARG PORT=3000
EXPOSE $PORT

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/main.js"]